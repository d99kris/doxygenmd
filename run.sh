#!/usr/bin/env bash

MAN="0"
BUILD="0"
TESTS="0"
ALL="0"
INSTALL="0"
UNINSTALL="0"
CLEAN="0"
case "${1%/}" in
  man)
    MAN="1"
    ;;
  
  build)
    BUILD="1"
    ;;

  tests)
    BUILD="1"
    TESTS="1"
    ;;

  all)
    MAN="1"
    BUILD="1"
    TESTS="1"
    ;;

  install)
    MAN="1"
    BUILD="1"
    TESTS="1"
    INSTALL="1"
    ;;

  uninstall)
    BUILD="1"
    UNINSTALL="1"
    ;;

  clean)
    CLEAN="1"
    ;;

  *)
    echo "usage: run.sh <man|build|tests|install|all>"
    echo "  man       - regenerate man-page"
    echo "  build     - build program and tests"
    echo "  tests     - perform build and run tests"
    echo "  all       - perform all actions above (not install)"
    echo "  install   - perform all actions above and install"
    echo "  uninstall - perform build and uninstall"
    echo "  clean     - clean (delete) build directory"
    exit 1
    ;;
esac

if [[ "${MAN}" == "1" ]]; then
  if [[ "$(uname)" == "Darwin" ]]; then
    SED="gsed -i"
  else
    SED="sed -i"
  fi
  cd src && help2man -n "doxygen markdown generator" -N -o doxygenmd.1 ./doxygenmd && \
  ${SED} "s/\.\\\\\" DO NOT MODIFY THIS FILE\!  It was generated by help2man.*/\.\\\\\" DO NOT MODIFY THIS FILE\!  It was generated by help2man./g" doxygenmd.1
  if [[ "${?}" != "0" ]]; then
    echo "generate man-page failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

if [[ "${BUILD}" == "1" ]]; then
  mkdir -p build && cd build && cmake .. && make -s
  if [[ "${?}" != "0" ]]; then
    echo "build failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

if [[ "${TESTS}" == "1" ]]; then
  cd build && ctest --output-on-failure
  if [[ "${?}" != "0" ]]; then
    echo "tests failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

if [[ "${INSTALL}" == "1" ]]; then
  if [[ "$(uname)" == "Darwin" ]]; then
    INSTALLSUDO=""
  else
    INSTALLSUDO="sudo"
  fi

  cd build && ${INSTALLSUDO} make install
  if [[ "${?}" != "0" ]]; then
    echo "install failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

if [[ "${UNINSTALL}" == "1" ]]; then
  if [[ "$(uname)" == "Darwin" ]]; then
    INSTALLSUDO=""
  else
    INSTALLSUDO="sudo"
  fi

  cd build && ${INSTALLSUDO} make uninstall
  if [[ "${?}" != "0" ]]; then
    echo "uninstall failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

if [[ "${CLEAN}" == "1" ]]; then
  rm -rf build
  if [[ "${?}" != "0" ]]; then
    echo "clean failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

exit 0
